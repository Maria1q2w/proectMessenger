{"version":3,"sources":["components/Nav/Nav.module.css","components/Friends/FriendsNav/FriendsNav.module.css","components/Users/Users.module.css","assets/images/user.png","assets/images/preloader.svg","api/Api.js","redux/sidebar-reducer.js","utils/validators/object-helpers.js","redux/users-reduser.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Friends/FriendsNav/Friend/FriendNav.jsx","components/Friends/FriendsNav/FriendsNav.jsx","components/Nav/Nav.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Friends/FriendsNav/Friend/FriendNav.module.css","components/Header/Header.module.css","redux/profile-reducer.js","components/hoc/withAuthRedirect.js","redux/dialogs-reducer.js"],"names":["module","exports","instance","Axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","getAuthMe","login","email","password","rememberMe","logout","initialState","friends","name","sidebarReducer","state","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setUsers","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","followed","count","filter","id","SET_USER_DATA","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Friend","props","className","classes","el","src","FriendsNav","friendsElement","item","Nav","nav","to","activeClassName","active","friendName","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","User","user","photos","small","userPhoto","disabled","some","Users","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","withAuthRedirect","connect","bind","page","totalCount","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","Input","required","formSummaryError","message","messages","length","stopSubmit","_error","formData","withSuspenseRedirect","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","FormControl","input","meta","touched","children","element","hasError","formControl","Textarea","restprops","child","placeholder","component","validatots","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId","mapStateToPropsForRedirect","RedirectComponent","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.2c9cd87d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"item\":\"Nav_item__96rLj\",\"active\":\"Nav_active__XSt-p\",\"friends\":\"Nav_friends__1Cp5t\",\"friendName\":\"Nav_friendName__O340k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsNav_item__UJ-Xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\"};","module.exports = __webpack_public_path__ + \"static/media/user.856e7845.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.b6ad69d5.svg\";","import * as Axios from 'axios';\n\n\nconst instance = Axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"8991b5d6-8bb8-4a7f-8b55-9a76b32fc425\"\n    }\n});\n\nexport const usersAPI = {\n    requestUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`).then(response => response.data)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`).then(response => response.data)\n    },\n    getProfile(userId) {\n        console.warn(\"profileAPI\");\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    }\n}\n\nexport const authAPI = {\n    getAuthMe(){\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false){\n        return instance.post(`auth/login`, {email, password, rememberMe});\n    },\n    logout(){\n        return instance.delete(`auth/login`);\n    }\n}\n\n// export const requestUsers = (currentPage, pageSize) => {\n//     return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\n// }\n// export const requestUsers2 = (u) => {\n//     return instance.delete(`follow/${u.id}`).then(response => response.data)\n// }","let initialState = {\n    friends: [\n        {name: \"Andrew\"},\n        {name: \"Artem\"},\n        {name: \"Sasha\"},\n    ],\n};\n\nexport const sidebarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map( u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n} ","import { usersAPI } from \"../api/Api\";\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nlet initialState = {\n    users: [ ],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW: \n        return { \n            ...state,\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true}),\n            //users: [...state.users]\n        }\n        case UNFOLLOW: \n        return { \n            ...state,\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false}),\n            //users: [...state.users]\n        }\n        case SET_USERS: \n            return {...state, users: action.users}\n        case SET_CURRENT_PAGE: \n            return {...state, currentPage: action.currentPage}\n        case SET_TOTAL_USERS_COUNT: \n            return {...state, totalUsersCount: action.count}\n        case TOGGLE_IS_FETCHING: \n            return {...state, isFetching: action.isFetching}\n        case TOGGLE_IS_FOLLOWING_PROGRESS: \n            return {...state, \n                followingInProgress: action.isFetching \n                ? [...state.followingInProgress, action.userId] \n                : state.followingInProgress.filter(id => id != action.userId)}\n            default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n        const data = await usersAPI.requestUsers(page, pageSize)\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n            dispatch(toggleIsFetching(false));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId))\n        const data = await apiMethod(userId);\n            if (data.resultCode === 0) {\n                dispatch(actionCreator(userId));\n            }\n            dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        let apiMethod = usersAPI.follow.bind(usersAPI);\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        let apiMethod = usersAPI.unfollow.bind(usersAPI);\n        followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\n    }\n}\n\nexport default usersReducer;\n\n","import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/Api\";\n\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case SET_USER_DATA: \n        return { \n            ...state,\n            ...action.payload\n        }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.getAuthMe();\n        if(response.data.resultCode === 0) {\n            let {id, login, email} = response.data.data;\n            dispatch(setAuthUserData(id, email, login, true));\n        }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe);\n        if(response.data.resultCode === 0) {\n            dispatch(getAuthUserData())\n        } else {\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n            dispatch(stopSubmit(\"login\", {_error: message}))\n        }\n}\n\nexport const logout = () => async (dispatch) => {\n    const response = await authAPI.logout();\n        if(response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n        }\n}\n\n\nexport default authReducer;","import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/Api\";\nimport { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALISED_SUCCESS = \"INITIALISED_SUCCESS\";\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case INITIALISED_SUCCESS: \n        return { \n            ...state,\n            initialized: true\n        }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALISED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    promise.then(() => {\n        dispatch(initializedSuccess());\n    })\n}\n\n\nexport default appReducer;","import dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport {reducer as formReducer } from \"redux-form\";\nimport { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport usersReducer from \"./users-reduser\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport appReducer from \"./app-reducer\";\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.__store__ = store;\n\nexport default store;","import classes from \"./FriendNav.module.css\";\nimport React from 'react';\n\nconst Friend = (props) => {\n    return (<div className = {classes.el}>\n        <img src = \"https://avatars.mds.yandex.net/i?id=bc493ebfd4db3861036b3c98f388b3408b4ffc3e-2510862-images-thumbs&n=13\"></img>\n        <div className = {classes.name}>{props.name}</div>\n    </div>)}\n\nexport default Friend;","import classes from \"./FriendsNav.module.css\";\nimport Friend from './Friend/FriendNav';\nimport React from 'react';\n\nconst FriendsNav = (props) => {\n    let friendsElement  = props.name?.map(name =>  <Friend name = {name.name}/>)\n\n    return (\n    <div className = {classes.item}>\n        {friendsElement}\n    </div>)}\n\nexport default FriendsNav;","import { NavLink } from \"react-router-dom\";\nimport FriendsNav from \"../Friends/FriendsNav/FriendsNav\";\nimport classes from \"./Nav.module.css\";\nimport React from 'react';\n\nconst Nav = (props) => {\n    return (<nav className = {classes.nav}>\n        <div className = {classes.item}>\n            <NavLink to = \"/profile\" activeClassName = {classes.active}>Profile</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/dialogs\" activeClassName = {classes.active}>Messages</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/users\" activeClassName = {classes.active}>Users</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/news\" activeClassName = {classes.active}>News</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/music\" activeClassName = {classes.active}>Music</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/settings\" activeClassName = {classes.active}>Settings</NavLink>\n        </div>\n        <div className = {classes.friends}>\n            <NavLink to = \"/friends\" activeClassName = {classes.active}>Friends\n            <div className = {classes.friendName}><FriendsNav name = {props.state?.friends}/></div></NavLink>\n        </div>\n    </nav>)\n}\n\nexport default Nav;","import classes from './Paginator.module.css';\nimport React, { useState } from  'react';\nimport cn from 'classnames';\n\nlet Paginator = ({totalUsersCount, pageSize, onPageChanged, currentPage, portionSize=10}) => {\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return (\n        <div className={classes.paginator} >\n            {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>Prev</button>}\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\n                return <span className= { cn({ [classes.selectedPage] : currentPage === p }, classes.pageNumber)} key={p} onClick={() => {onPageChanged(p); }}>{p}</span>\n            })}\n            {portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>Next</button>}\n        </div>\n    )\n}\n\nexport default Paginator;","import classes from './Users.module.css';\nimport userPhoto from './../../assets/images/user.png';\nimport React from  'react';\nimport { NavLink } from 'react-router-dom';\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (<div>\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={classes.userPhoto}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed \n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick= {() => {\n                        unfollow(user.id)\n                    }} >Unfollow</button> \n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick= {() => {\n                        follow(user.id)\n                        }}>Follow</button>}\n                    \n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n                <span>\n                    <div>{\"user.location.country\"}</div>\n                    <div>{\"user.location.city\"}</div>\n                </span>\n            </span>\n        </div>\n    </div>)\n}\n\nexport default User;","import React from  'react';\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, followingInProgress, unfollow, follow, ...props}) => {\n    return (<div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize} />\n        <div>\n            {users.map(u => <User key= {u.id} user={u} followingInProgress={followingInProgress} unfollow={unfollow} follow={follow} />\n            )}\n        </div>\n    </div>)\n}\n\nexport default Users;","import { createSelector } from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n});\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, setUsers, unfollow } from '../../redux/users-reduser';\nimport { toggleFollowingProgress, requestUsers }from '../../redux/users-reduser';\nimport Users from './Users';\nimport Preloader from '../common/Preloader';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getPageSize, getTotalUsersCount, getCurrentPage,  getFollowingInProgress, getIsFetching, getUsers } from '../../redux/users-selectors';\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize, requestUsers } = this.props;\n        requestUsers(currentPage, pageSize)\n    }\n    onPageChanged = (pageNumber) => {\n        const {pageSize, requestUsers} = this.props;\n        requestUsers(pageNumber, pageSize)\n    }\n    render() {\n        return (<> \n        {this.props.isFetching ? <Preloader /> : null}\n        <Users totalUsersCount= {this.props.totalUsersCount} \n        pageSize= {this.props.pageSize} \n        currentPage= {this.props.currentPage} \n        onPageChanged={this.onPageChanged} \n        users={this.props.users} \n        follow={this.props.follow} \n        unfollow={this.props.unfollow} \n        toggleFollowingProgress={this.props.toggleFollowingProgress} \n        followingInProgress={this.props.followingInProgress} /> \n    </>\n    )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect (mapStateToProps, {follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        toggleFollowingProgress,\n        requestUsers}\n))(UsersContainer)","import classes from  './Header.module.css';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    return (<header className = {classes.header}>\n            <img src = \"https://e-batyushka.ru/wp-content/uploads/2020/01/favicon.png.png\"></img>\n            <div className={classes.loginBlock}>\n                {props.isAuth ? <div> {props.login} <button onClick={props.logout} >Log out</button> </div> : <NavLink to={'/login'}>Login</NavLink> }\n            </div>\n        </header>)\n}\nexport default Header;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport { logout } from '../../redux/auth-reducer';\n\nclass HeaderContainer extends React.Component {\n    \n    render() {\n        return (<Header {...this.props} />)\n    }\n    \n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../../utils/validators/validators';\nimport { createField, Input } from '../common/FormsControls/FormsControls';\nimport { login }  from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport classes from '../common/FormsControls/FormsControls.module.css';\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n                {createField(\"Email\", \"email\", Input, [required])}\n                {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\n                {createField(null, \"rememberMe\", Input, null, {type: \"checkbox\"}, \"remember me\")}\n            {error && <div className={classes.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: \"login\"\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if  (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return (<div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n    </div>)\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React, { Suspense } from 'react';\nimport Preloader from '../common/Preloader';\n\nexport const withSuspenseRedirect = (Component) => {\n    return ((props) => {\n        return <Suspense fallback={<Preloader />}>\n            <Component {...props} />\n        </Suspense>\n    });\n}","import React, { Component, Suspense } from  'react' \nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Friends from './components/Friends/Friends';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader';\nimport store from './redux/redux-store';\nimport { withSuspenseRedirect } from './components/hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeApp();\n}\n  render () {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className =  \"app-wrapper\">\n        <HeaderContainer />\n        <Nav />\n        <div className = \"app-wrapper-content\">\n            <Route path =\"/dialogs\" render={withSuspenseRedirect(DialogsContainer)} />\n            <Route path =\"/profile/:userId?\" render= {withSuspenseRedirect(ProfileContainer)} />\n            <Route path =\"/users\" render= { () =>  <UsersContainer />} />\n            <Route path =\"/login\" render= { () =>  <LoginPage />} />\n            {/* <Route path =\"/news\" element = {<News />} />\n            <Route path =\"/music\" element = {<Music />} />\n            <Route path =\"/settings\" element = {<Settings />} />\n            <Route path =\"/friends\" element = {<Friends />} /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\n\nconst SamuraiJSApp = (props) => {\n  return (<BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Provider store = {store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>)\n} \n\nexport default SamuraiJSApp ","import './index.css';\nimport store from './redux/redux-store'; \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(\n    <SamuraiJSApp /> ,  document.getElementById('root')\n);\n\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n\n// let rerenderEntireTree =  ()  => {\n//     root.render(\n//         <React.StrictMode>\n//             <BrowserRouter>\n//                 <Provider store= {store}>\n//                     <App />\n//                 </Provider>\n//             </BrowserRouter>\n//         </React.StrictMode>\n//     );\n// }\n\n\n// store.subscribe(() => {\n//     let state = store.getState();\n//     rerenderEntireTree(state);\n// });\n\n// reportWebVitals();","import classes from './FormsControls.module.css';\nimport React from 'react';\nimport { Field } from 'redux-form';\n\nconst FormControl = ({input, meta: {touched, error}, element, children}) => {\n    const hasError =  touched && error\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, child, meta, element, ...restprops} = props;\n    return (\n        <FormControl {...props} ><textarea {...input} {...restprops} ></textarea></FormControl>\n    )\n}\n\nexport const Input = (props) => {\n    const {input, child, meta, element, ...restprops} = props;\n    return (\n        <FormControl {...props} ><input {...input} {...restprops} ></input></FormControl>\n    )\n}\n\nexport const createField = (placeholder, name, component, validatots, props={}, text=\"\") => {\n    return <div>\n            <Field placeholder={placeholder} name={name} component={component} validate={validatots} {...props} /> {text}\n        </div>\n}","import preloader from '../../assets/images/preloader.svg';\nimport React from 'react';\n\nlet Preloader = (props) => {\n    return <img  src={preloader} />\n}\n\nexport default  Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"paginator\":\"Paginator_paginator__18P4_\"};","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n    \n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max lenght is ${maxLength} symbols`;\n\n    return undefined;\n    \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"el\":\"FriendNav_el__1Vp1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import { profileAPI, usersAPI } from \"../api/Api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst DELETE_POST = \"DELETE_POST\";\n\nlet initialState = {\n    posts: [\n        {id: 1, message: \"Hi, how are you?\", likesCount: 10}, \n        {id: 2, message: 'It\\'s my first post', likesCount: 12},\n    ],\n    profile: null,\n    status: \"\",\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 3,\n                message: action.newPostText,\n                likesCount: 0,\n            };\n            return {\n                ...state,\n                newPostText: \"\",\n                posts: [...state.posts, newPost]\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            };\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id != action.postId)\n            };\n        }\n            default:\n            return state;\n            \n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId)\n        dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    const response = await profileAPI.getStatus(userId);\n        dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    const response = await profileAPI.updateStatus(status);\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n};\n\nexport default profileReducer;\n\n// const profileSlice = createSlice({\n//     name: \"profile\",\n//     initialState: initialState,\n//     reducers: {\n//         profileReducer: (state = initialState, action) => {\n//         switch(action.type) {\n//             case ADD_POST:\n//                 let newPost = {\n//                     id: 3,\n//                     message: state.newPostText,\n//                     likesCount: 0,\n//                 };\n//                 state.posts?.push(newPost);\n//                 state.newPostText = \"\";\n//                 return state;\n//             case UPDATE_NEW_POST_TEXT: \n//                 state.newPostText = action.newText;\n//                 return state;\n//             default:\n//                 return state;\n//         }\n//     }\n// }})\n\n// // export default profileReducer;\n\n// export const {actions, reducer} = profileSlice;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                return <Redirect to={\"/login\"} />\n            }\n            return  <Component {...this.props} />\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}","const SEND_MESSAGE = \"SEND-MESSAGE\";\n\n\nlet initialState = {\n    messages: [\n        {id: 1, message: \"Hi\"}, \n        {id: 2, message: \"How are you?\"},\n        {id: 3, message: \"Yo\"},\n    ],\n    dialogs: [\n        {id: 1, name: \"Dimych\"}, \n        {id: 2, name: \"Andrew\"},\n        {id: 3, name: \"Artem\"},\n        {id: 4, name: \"Sasha\"},\n        {id: 5, name: \"Masha\"},\n    ]\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    let stateCopy;\n    \n    switch(action.type) {\n        case SEND_MESSAGE: {\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                newMessageBody: \"\",\n                messages: [...state.messages, {id: 4, message: body}]\n            }\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\nexport default dialogsReducer;"],"sourceRoot":""}