{"version":3,"sources":["api/Api.js","assets/images/user.png","components/Nav/Nav.module.css","components/Friends/FriendsNav/FriendsNav.module.css","components/Users/Users.module.css","assets/images/preloader.svg","components/common/FormsControls/FormsControls.js","redux/sidebar-reducer.js","utils/validators/object-helpers.js","redux/users-reduser.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Friends/FriendsNav/Friend/FriendNav.jsx","components/Friends/FriendsNav/FriendsNav.jsx","components/Nav/Nav.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","components/hoc/withSuspense.js","App.js","index.js","components/common/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Friends/FriendsNav/Friend/FriendNav.module.css","components/Header/Header.module.css","redux/profile-reducer.js","components/hoc/withAuthRedirect.js","redux/dialogs-reducer.js"],"names":["instance","Axios","withCredentials","baseURL","headers","usersAPI","requestUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","saveProfile","profile","savePhoto","photoFile","formData","FormData","append","authAPI","getAuthMe","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","module","exports","FormControl","input","meta","touched","error","children","element","hasError","className","classes","formControl","Textarea","props","restprops","child","Input","createField","placeholder","name","component","validatots","text","validate","initialState","friends","sidebarReducer","state","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setUsers","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","action","followed","count","filter","id","SET_USER_DATA","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Friend","el","src","FriendsNav","friendsElement","item","Nav","nav","to","activeClassName","active","friendName","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","p","cn","selectedPage","pageNumber","key","User","user","photos","small","userPhoto","disabled","some","Users","getUsers","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","withAuthRedirect","connect","bind","page","totalCount","Header","header","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","formSummaryError","message","messages","length","stopSubmit","_error","withSuspenseRedirect","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","AppContainer","withRouter","SamuraiJSApp","ReactDOM","document","getElementById","preloader","value","maxLengthCreator","maxLength","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","Promise","reject","newPost","postId","mapStateToPropsForRedirect","RedirectComponent","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.980bdfab.chunk.js","sourcesContent":["import * as Axios from 'axios';\n\n\nconst instance = Axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"8991b5d6-8bb8-4a7f-8b55-9a76b32fc425\"\n    }\n});\n\nexport const usersAPI = {\n    requestUsers(currentPage, pageSize) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`).then(response => response.data)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`).then(response => response.data)\n    },\n    getProfile(userId) {\n        console.warn(\"profileAPI\");\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId)\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status})\n    },\n    saveProfile(profile) {\n        return instance.put(`profile`, profile)\n    },\n    savePhoto(photoFile) {\n        const formData = new FormData();\n        formData.append(\"image\", photoFile)\n        return instance.put(`profile/photo`, formData, {headers: {\n            'Content-Type': 'multipart/form-data'\n        }})\n    }\n}\n\nexport const authAPI = {\n    getAuthMe(){\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false, captcha=null){\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha});\n    },\n    logout(){\n        return instance.delete(`auth/login`);\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl(){\n        return instance.get(`security/get-captcha-url`);\n    }\n}\n\n// export const requestUsers = (currentPage, pageSize) => {\n//     return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response => response.data)\n// }\n// export const requestUsers2 = (u) => {\n//     return instance.delete(`follow/${u.id}`).then(response => response.data)\n// }","module.exports = __webpack_public_path__ + \"static/media/user.856e7845.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"item\":\"Nav_item__96rLj\",\"active\":\"Nav_active__XSt-p\",\"friends\":\"Nav_friends__1Cp5t\",\"friendName\":\"Nav_friendName__O340k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendsNav_item__UJ-Xs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.b6ad69d5.svg\";","import classes from './FormsControls.module.css';\nimport React from 'react';\nimport { Field } from 'redux-form';\n\nconst FormControl = ({input, meta: {touched, error}, element, children}) => {\n    const hasError =  touched && error\n    return (\n        <div className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, child, meta, element, ...restprops} = props;\n    return (\n        <FormControl {...props} ><textarea {...input} {...restprops} ></textarea></FormControl>\n    )\n}\n\nexport const Input = (props) => {\n    const {input, child, meta, element, ...restprops} = props;\n    return (\n        <FormControl {...props} ><input {...input} {...restprops} ></input></FormControl>\n    )\n}\n\nexport const createField = (placeholder, name, component, validatots, props={}, text=\"\") => {\n    return <div>\n            <Field placeholder={placeholder} name={name} component={component} validate={validatots} {...props} /> {text}\n        </div>\n}","let initialState = {\n    friends: [\n        {name: \"Andrew\"},\n        {name: \"Artem\"},\n        {name: \"Sasha\"},\n    ],\n};\n\nexport const sidebarReducer = (state = initialState, action) => {\n\n    return state;\n}\n\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map( u => {\n        if (u[objPropName] === itemId) {\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n} ","import { usersAPI } from \"../api/Api\";\nimport { updateObjectInArray } from \"../utils/validators/object-helpers\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nlet initialState = {\n    users: [ ],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW: \n        return { \n            ...state,\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true}),\n            //users: [...state.users]\n        }\n        case UNFOLLOW: \n        return { \n            ...state,\n            users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false}),\n            //users: [...state.users]\n        }\n        case SET_USERS: \n            return {...state, users: action.users}\n        case SET_CURRENT_PAGE: \n            return {...state, currentPage: action.currentPage}\n        case SET_TOTAL_USERS_COUNT: \n            return {...state, totalUsersCount: action.count}\n        case TOGGLE_IS_FETCHING: \n            return {...state, isFetching: action.isFetching}\n        case TOGGLE_IS_FOLLOWING_PROGRESS: \n            return {...state, \n                followingInProgress: action.isFetching \n                ? [...state.followingInProgress, action.userId] \n                : state.followingInProgress.filter(id => id != action.userId)}\n            default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId});\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n        const data = await usersAPI.requestUsers(page, pageSize)\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n            dispatch(toggleIsFetching(false));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId))\n        const data = await apiMethod(userId);\n            if (data.resultCode === 0) {\n                dispatch(actionCreator(userId));\n            }\n            dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        let apiMethod = usersAPI.follow.bind(usersAPI);\n        followUnfollowFlow(dispatch, userId, apiMethod, followSuccess);\n    }\n}\n\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        let apiMethod = usersAPI.unfollow.bind(usersAPI);\n        followUnfollowFlow(dispatch, userId, apiMethod, unfollowSuccess);\n    }\n}\n\nexport default usersReducer;\n\n","import { stopSubmit } from \"redux-form\";\nimport { authAPI, securityAPI } from \"../api/Api\";\n\nconst SET_USER_DATA = \"samurai-network/auth/SET_USER_DATA\";\nconst GET_CAPTCHA_URL_SUCCESS = \"samurai-network/auth/GET_CAPTCHA_URL_SUCCESS\";\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_CAPTCHA_URL_SUCCESS: \n        case SET_USER_DATA: \n        return { \n            ...state,\n            ...action.payload\n        }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}});\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.getAuthMe();\n        if(response.data.resultCode === 0) {\n            let {id, login, email} = response.data.data;\n            dispatch(setAuthUserData(id, email, login, true));\n        }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\n    const response = await authAPI.login(email, password, rememberMe, captcha);\n        if(response.data.resultCode === 0) {\n            dispatch(getAuthUserData())\n        } else {\n            if(response.data.resultCode === 10) {\n                dispatch(getCaptchaUrl());\n            }\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n            dispatch(stopSubmit(\"login\", {_error: message}))\n        }\n}\n\nexport const logout = () => async (dispatch) => {\n    const response = await authAPI.logout();\n        if(response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n        }\n}\n\nexport const getCaptchaUrl = () => async (dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\n\nexport default authReducer;","import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/Api\";\nimport { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALISED_SUCCESS = \"INITIALISED_SUCCESS\";\n\nlet initialState = {\n    initialized: false\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case INITIALISED_SUCCESS: \n        return { \n            ...state,\n            initialized: true\n        }\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({type: INITIALISED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    promise.then(() => {\n        dispatch(initializedSuccess());\n    })\n}\n\n\nexport default appReducer;","import dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport {reducer as formReducer } from \"redux-form\";\nimport { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\nimport usersReducer from \"./users-reduser\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from 'redux-thunk';\nimport appReducer from \"./app-reducer\";\n\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.__store__ = store;\n\nexport default store;","import classes from \"./FriendNav.module.css\";\nimport React from 'react';\n\nconst Friend = (props) => {\n    return (<div className = {classes.el}>\n        <img src = \"https://avatars.mds.yandex.net/i?id=bc493ebfd4db3861036b3c98f388b3408b4ffc3e-2510862-images-thumbs&n=13\"></img>\n        <div className = {classes.name}>{props.name}</div>\n    </div>)}\n\nexport default Friend;","import classes from \"./FriendsNav.module.css\";\nimport Friend from './Friend/FriendNav';\nimport React from 'react';\n\nconst FriendsNav = (props) => {\n    let friendsElement  = props.name?.map(name =>  <Friend name = {name.name}/>)\n\n    return (\n    <div className = {classes.item}>\n        {friendsElement}\n    </div>)}\n\nexport default FriendsNav;","import { NavLink } from \"react-router-dom\";\nimport FriendsNav from \"../Friends/FriendsNav/FriendsNav\";\nimport classes from \"./Nav.module.css\";\nimport React from 'react';\n\nconst Nav = (props) => {\n    return (<nav className = {classes.nav}>\n        <div className = {classes.item}>\n            <NavLink to = \"/profile\" activeClassName = {classes.active}>Profile</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/dialogs\" activeClassName = {classes.active}>Messages</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/users\" activeClassName = {classes.active}>Users</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/news\" activeClassName = {classes.active}>News</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/music\" activeClassName = {classes.active}>Music</NavLink>\n        </div>\n        <div className = {classes.item}>\n            <NavLink to = \"/settings\" activeClassName = {classes.active}>Settings</NavLink>\n        </div>\n        <div className = {classes.friends}>\n            <NavLink to = \"/friends\" activeClassName = {classes.active}>Friends\n            <div className = {classes.friendName}><FriendsNav name = {props.state?.friends}/></div></NavLink>\n        </div>\n    </nav>)\n}\n\nexport default Nav;","import classes from './Paginator.module.css';\nimport React, { useState } from  'react';\nimport cn from 'classnames';\n\nlet Paginator = ({totalUsersCount, pageSize, onPageChanged, currentPage, portionSize=10}) => {\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return (\n        <div className={classes.paginator} >\n            {portionNumber > 1 && <button onClick={() => {setPortionNumber(portionNumber - 1)}}>Prev</button>}\n            {pages.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber).map((p) => {\n                return <span className= { cn({ [classes.selectedPage] : currentPage === p }, classes.pageNumber)} key={p} onClick={() => {onPageChanged(p); }}>{p}</span>\n            })}\n            {portionCount > portionNumber && <button onClick={() => {setPortionNumber(portionNumber + 1)}}>Next</button>}\n        </div>\n    )\n}\n\nexport default Paginator;","import classes from './Users.module.css';\nimport userPhoto from './../../assets/images/user.png';\nimport React from  'react';\nimport { NavLink } from 'react-router-dom';\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (<div>\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={classes.userPhoto}/>\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed \n                    ? <button disabled={followingInProgress.some(id => id === user.id)} onClick= {() => {\n                        unfollow(user.id)\n                    }} >Unfollow</button> \n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick= {() => {\n                        follow(user.id)\n                        }}>Follow</button>}\n                    \n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n                <span>\n                    <div>{\"user.location.country\"}</div>\n                    <div>{\"user.location.city\"}</div>\n                </span>\n            </span>\n        </div>\n    </div>)\n}\n\nexport default User;","import React from  'react';\nimport Paginator from '../common/Paginator/Paginator';\nimport User from './User';\n\nlet Users = ({totalUsersCount, pageSize, currentPage, onPageChanged, users, followingInProgress, unfollow, follow, ...props}) => {\n    return (<div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalUsersCount={totalUsersCount} pageSize={pageSize} />\n        <div>\n            {users.map(u => <User key= {u.id} user={u} followingInProgress={followingInProgress} unfollow={unfollow} follow={follow} />\n            )}\n        </div>\n    </div>)\n}\n\nexport default Users;","import { createSelector } from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, (users) => {\n    return users.filter(u => true);\n});\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, setCurrentPage, setUsers, unfollow } from '../../redux/users-reduser';\nimport { toggleFollowingProgress, requestUsers }from '../../redux/users-reduser';\nimport Users from './Users';\nimport Preloader from '../common/Preloader';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\nimport { getPageSize, getTotalUsersCount, getCurrentPage,  getFollowingInProgress, getIsFetching, getUsers } from '../../redux/users-selectors';\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize, requestUsers } = this.props;\n        requestUsers(currentPage, pageSize)\n    }\n    onPageChanged = (pageNumber) => {\n        const {pageSize, requestUsers} = this.props;\n        requestUsers(pageNumber, pageSize)\n    }\n    render() {\n        return (<> \n        {this.props.isFetching ? <Preloader /> : null}\n        <Users totalUsersCount= {this.props.totalUsersCount} \n        pageSize= {this.props.pageSize} \n        currentPage= {this.props.currentPage} \n        onPageChanged={this.onPageChanged} \n        users={this.props.users} \n        follow={this.props.follow} \n        unfollow={this.props.unfollow} \n        toggleFollowingProgress={this.props.toggleFollowingProgress} \n        followingInProgress={this.props.followingInProgress} /> \n    </>\n    )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose(\n    withAuthRedirect,\n    connect (mapStateToProps, {follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        toggleFollowingProgress,\n        requestUsers}\n))(UsersContainer)","import classes from  './Header.module.css';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n    return (<header className = {classes.header}>\n            <img src = \"https://e-batyushka.ru/wp-content/uploads/2020/01/favicon.png.png\"></img>\n            <div className={classes.loginBlock}>\n                {props.isAuth ? <div> {props.login} <button onClick={props.logout} >Log out</button> </div> : <NavLink to={'/login'}>Login</NavLink> }\n            </div>\n        </header>)\n}\nexport default Header;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport { logout } from '../../redux/auth-reducer';\n\nclass HeaderContainer extends React.Component {\n    \n    render() {\n        return (<Header {...this.props} />)\n    }\n    \n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { required } from '../../utils/validators/validators';\nimport { createField, Input } from '../common/FormsControls/FormsControls';\nimport { login }  from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport classes from '../common/FormsControls/FormsControls.module.css';\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n                {createField(\"Email\", \"email\", Input, [required])}\n                {createField(\"Password\", \"password\", Input, [required], {type: \"password\"})}\n                {createField(null, \"rememberMe\", Input, null, {type: \"checkbox\"}, \"remember me\")}\n                {captchaUrl && <img src={captchaUrl}></img> }\n                {captchaUrl && createField(\"Symbols from image\", \"captcha\", Input, [required], {})}\n            {error && <div className={classes.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: \"login\"\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if  (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return (<div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>)\n}\n\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import React, { Suspense } from 'react';\nimport Preloader from '../common/Preloader';\n\nexport const withSuspenseRedirect = (Component) => {\n    return ((props) => {\n        return <Suspense fallback={<Preloader />}>\n            <Component {...props} />\n        </Suspense>\n    });\n}","import React, { Component, Suspense } from  'react' \nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport { HashRouter, Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport Friends from './components/Friends/Friends';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader';\nimport store from './redux/redux-store';\nimport { withSuspenseRedirect } from './components/hoc/withSuspense';\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n  // catchAllUnhandledErrors = (promiseRejectionEvent) => {\n  //   alert(promiseRejectionEvent);\n  // }\n  componentDidMount() {\n    this.props.initializeApp();\n    //window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n  }\n  // componentWillUnmount() {\n  //   window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors)\n  // }\n  render () {\n    if (!this.props.initialized) {\n      return <Preloader />\n    }\n    return (\n      <div className =  \"app-wrapper\">\n        <HeaderContainer />\n        <Nav />\n        <div className = \"app-wrapper-content\">\n          <Switch>\n            <Route exact path =\"/\" render= {() => <Redirect to={\"/profile\"} />} />\n            <Route path =\"/dialogs\" render={withSuspenseRedirect(DialogsContainer)} />\n            <Route path =\"/profile/:userId?\" render= {withSuspenseRedirect(ProfileContainer)} />\n            <Route path =\"/users\" render= { () =>  <UsersContainer />} />\n            <Route path =\"/login\" render= { () =>  <LoginPage />} />\n            <Route path =\"*\" render= { () =>  <div><b>404 NOT FOUND</b></div>} />\n            {/* <Route path =\"/news\" element = {<News />} />\n            <Route path =\"/music\" element = {<Music />} />\n            <Route path =\"/settings\" element = {<Settings />} />\n            <Route path =\"/friends\" element = {<Friends />} /> */}\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nlet AppContainer = compose(withRouter, connect(mapStateToProps, {initializeApp}))(App);\n\n\nconst SamuraiJSApp = () => {\n  return (<HashRouter>\n        <Provider store = {store}>\n            <AppContainer />\n        </Provider>\n    </HashRouter>)\n} \n\nexport default SamuraiJSApp ","import './index.css';\nimport store from './redux/redux-store'; \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport SamuraiJSApp from './App';\n\nReactDOM.render(\n    <SamuraiJSApp /> ,  document.getElementById('root')\n);\n\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n\n// let rerenderEntireTree =  ()  => {\n//     root.render(\n//         <React.StrictMode>\n//             <BrowserRouter>\n//                 <Provider store= {store}>\n//                     <App />\n//                 </Provider>\n//             </BrowserRouter>\n//         </React.StrictMode>\n//     );\n// }\n\n\n// store.subscribe(() => {\n//     let state = store.getState();\n//     rerenderEntireTree(state);\n// });\n\n// reportWebVitals();","import preloader from '../../assets/images/preloader.svg';\nimport React from 'react';\n\nlet Preloader = (props) => {\n    return <img  src={preloader} />\n}\n\nexport default  Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n    \n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max lenght is ${maxLength} symbols`;\n\n    return undefined;\n    \n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\",\"paginator\":\"Paginator_paginator__18P4_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"el\":\"FriendNav_el__1Vp1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import { stopSubmit } from \"redux-form\";\nimport { profileAPI, usersAPI } from \"../api/Api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst DELETE_POST = \"DELETE_POST\";\nconst SAVE_PHOTO = \"SAVE_PHOTO\";\n\nlet initialState = {\n    posts: [\n        {id: 1, message: \"Hi, how are you?\", likesCount: 10}, \n        {id: 2, message: 'It\\'s my first post', likesCount: 12},\n    ],\n    profile: null,\n    status: \"\",\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 3,\n                message: action.newPostText,\n                likesCount: 0,\n            };\n            return {\n                ...state,\n                newPostText: \"\",\n                posts: [...state.posts, newPost]\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            };\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            };\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                posts: state.posts.filter(p => p.id != action.postId)\n            };\n        }\n        case SAVE_PHOTO: {\n            return {\n                ...state,\n                profile: {...state.profile, photos: action.photos}\n            };\n        }\n            default:\n            return state;\n            \n    }\n}\n\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO, photos});\nexport const getUserProfile = (userId) => async (dispatch) => {\n    const response = await usersAPI.getProfile(userId)\n        dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    const response = await profileAPI.getStatus(userId);\n        dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    const response = await profileAPI.updateStatus(status);\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n};\n\nexport const savePhoto = (file) => async (dispatch) => {\n    const response = await profileAPI.savePhoto(file);\n        if (response.data.resultCode === 0) {\n            dispatch(savePhotoSuccess(response.data.data.photos));\n        }\n};\n\nexport const saveProfile = (profile) => async (dispatch,getState) => {\n    const userId = getState().auth.userId\n    const response = await profileAPI.saveProfile(profile);\n        if (response.data.resultCode === 0) {\n            dispatch(getUserProfile(userId));\n        } else {\n            dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}))\n            return Promise.reject(response.data.messages[0])\n        }\n};\n\nexport default profileReducer;\n\n// const profileSlice = createSlice({\n//     name: \"profile\",\n//     initialState: initialState,\n//     reducers: {\n//         profileReducer: (state = initialState, action) => {\n//         switch(action.type) {\n//             case ADD_POST:\n//                 let newPost = {\n//                     id: 3,\n//                     message: state.newPostText,\n//                     likesCount: 0,\n//                 };\n//                 state.posts?.push(newPost);\n//                 state.newPostText = \"\";\n//                 return state;\n//             case UPDATE_NEW_POST_TEXT: \n//                 state.newPostText = action.newText;\n//                 return state;\n//             default:\n//                 return state;\n//         }\n//     }\n// }})\n\n// // export default profileReducer;\n\n// export const {actions, reducer} = profileSlice;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                return <Redirect to={\"/login\"} />\n            }\n            return  <Component {...this.props} />\n        }\n    }\n    \n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent)\n    return ConnectedAuthRedirectComponent;\n}","const SEND_MESSAGE = \"SEND-MESSAGE\";\n\n\nlet initialState = {\n    messages: [\n        {id: 1, message: \"Hi\"}, \n        {id: 2, message: \"How are you?\"},\n        {id: 3, message: \"Yo\"},\n    ],\n    dialogs: [\n        {id: 1, name: \"Dimych\"}, \n        {id: 2, name: \"Andrew\"},\n        {id: 3, name: \"Artem\"},\n        {id: 4, name: \"Sasha\"},\n        {id: 5, name: \"Masha\"},\n    ]\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    let stateCopy;\n    \n    switch(action.type) {\n        case SEND_MESSAGE: {\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                newMessageBody: \"\",\n                messages: [...state.messages, {id: 4, message: body}]\n            }\n        }\n        default:\n            return state;\n\n    }\n}\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\n\nexport default dialogsReducer;"],"sourceRoot":""}