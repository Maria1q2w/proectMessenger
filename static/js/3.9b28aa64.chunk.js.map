{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Posts/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","Preloader","Post","item","message","like","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","map","post","likesCount","key","id","createRef","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.9b28aa64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1d730\"};","import classes from \"./ProfileInfo.module.css\";\nimport React, {useEffect, useState} from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status])\n\n    const activateEditMods = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n    return (\n    <div>\n        {!editMode && \n        <div>\n            <span onDoubleClick={activateEditMods} >{props.status || \"-----\"}</span>\n        </div>\n        }\n        {editMode &&\n        <div>\n            <input onChange={onStatusChange} autoFocus={true} value={status} onBlur={deactivateEditMode} />\n        </div>\n        }       \n    </div>\n    )\n}\n\nexport default ProfileStatusWithHooks;","import classes from \"./ProfileInfo.module.css\";\nimport React from 'react';\nimport Preloader from \"../../common/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader />\n    }\n\n    return (<div>\n        <div className = {classes.descriptionBlock}>\n            <img src = \"https://avatars.mds.yandex.net/i?id=167a8a58b3116d65d22d2c15edef7ba5_l-5240048-images-thumbs&n=13\"></img>\n        </div>\n        <div className = {classes.descriptionBlock}>\n            <img src={profile.photos.large}></img>\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        </div>\n    </div>)\n}\n\nexport default ProfileInfo;","import classes from \"./Post.module.css\";\nimport React from 'react';\n\nconst Post = (props) => {\n    return (<div className = {classes.item}>\n                <img src = \"https://avatars.mds.yandex.net/i?id=bc493ebfd4db3861036b3c98f388b3408b4ffc3e-2510862-images-thumbs&n=13\"></img>\n                {props.message}\n                    <div><span>Like </span>{props.like}</div>\n            </div>)}\n\nexport default Post;","import classes from \"./MyPosts.module.css\";\nimport Post from \"./Posts/Post\";\nimport { PureComponent } from \"react\";\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required }from \"../../../utils/validators/validators\"\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\nlet maxLength10 = maxLengthCreator(10);\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength10]} />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\n\nconst MyPosts = React.memo((props) => {\n\n    // shouldComponentUpdate(nextProps, nextState) {\n    //     return nextProps != this.props || nextState != this.state;\n    // }\n\n    let postsElements  = [...props.posts].reverse().map(post => <Post message= {post.message} like= {post.likesCount} key={post.id} />)\n        let newPostElement = React.createRef();\n    \n        let onAddPost = (values) => {\n            props.addPost(values.newPostText);\n        };\n\n        return (<div className= {classes.postsBlock}>\n            <h3>My posts</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost} />\n            <div className= {classes.posts}>\n                {postsElements}\n            </div>\n        </div>\n        )\n})\n\nexport default MyPosts;","import { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\n\n// const MyPostsContainer = () => {\n//     return (\n//         <StoreContext.Consumer> \n//             {(store) => {\n//                 let state = store.getState();\n\n//                 let addPost = () => {\n//                     store.dispatch(addPostActionCreator());\n//                 };\n            \n//                 let onPostChange = (text) => {\n//                     let action = updateNewPostTextActionCreator(text);\n//                     store.dispatch(action);\n//                 }\n//                 return (\n//                 <MyPosts updateNewPostText= {onPostChange} addPost= {addPost} posts= {state.profilePage.posts} newPostText= {state.profilePage.newPostText} />)\n                \n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText))\n        }\n    }\n};\n\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import classes from \"./Profile.module.css\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport React from 'react';\n\n\nconst Profile = (props) => {\n    return (<div className = {classes.content}>\n        <ProfileInfo profile = {props.profile} status={props.status} updateStatus={props.updateStatus} />\n        <MyPostsContainer />\n    </div>)\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer'\nimport { withRouter } from 'react-router-dom';\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props} profile= {this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} \n            />\n        )\n    }\n    \n}\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose(\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer)\n\n"],"sourceRoot":""}